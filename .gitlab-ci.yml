---
image: docker:stable

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

services:
  - docker:dind

before_script:
  - docker info

build_job:
  stage: build
  script:
    - echo 'Building'

test_unit_job:
  stage: test
  script:
    - apk update
    - apk upgrade
    - apk add ruby-dev ruby-bundler make gcc libc-dev
    - cd reddit
    - bundle install
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review:
  stage: review
  script:
    - cd -
    - apt-get update
    - apt-get --assume-yes install make ca-certificates openssl python unzip
    - update-ca-certificates
    - echo $GOOGLE_CREDENTIALS > ${HOME}/gcloud-service-key.json
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud --quiet components update
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
    - unzip terraform_0.11.11_linux_amd64.zip -d /usr/local/bin/
    - cd terraform
    - terraform init
    - terraform workspace select $CI_COMMIT_REF_SLUG || terraform workspace new $CI_COMMIT_REF_SLUG
    - terraform apply -auto-approve -var "env_name=$CI_COMMIT_REF_SLUG" -var "project=$GCLOUD_PROJECT_NAME"
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    url: http://$CI_ENVIRONMENT_SLUG.example.com
    on_stop: stop_review
  only:
    - /^*-deploy$/
  except:
    - master

stop_review:
  stage: review
  script:
    - cd -
    - apt-get update
    - apt-get --assume-yes install make ca-certificates openssl python unzip
    - update-ca-certificates
    - echo $GOOGLE_CREDENTIALS > ${HOME}/gcloud-service-key.json
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud --quiet components update
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
    - unzip terraform_0.11.11_linux_amd64.zip -d /usr/local/bin/
    - cd terraform
    - terraform init
    - terraform workspace select $CI_COMMIT_REF_SLUG
    - terraform destroy -auto-approve -var "env_name=$CI_COMMIT_REF_SLUG" -var "project=$GCLOUD_PROJECT_NAME"
    - terraform workspace select default
    - terraform workspace delete $CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    action: stop
  only:
    - /^*-deploy$/

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
